{"remainingRequest":"C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\WebProjects\\Web-csp\\web-csp\\src\\components\\Header.vue?vue&type=template&id=61dd7a3d&","dependencies":[{"path":"C:\\WebProjects\\Web-csp\\web-csp\\src\\components\\Header.vue","mtime":1598670441751},{"path":"C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1598308836458},{"path":"C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1598308881020},{"path":"C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1598308836458},{"path":"C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\vue-loader\\lib\\index.js","mtime":1598308880982}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IGF0dHJzOiB7IGlkOiAiaGVhZGVyIiB9IH0sIFsKICAgIF92bS5fbSgwKSwKICAgIF9jKCJuYXYiLCB7IHN0YXRpY0NsYXNzOiAidi1uYXZiYXIiIH0sIFsKICAgICAgX3ZtLl9tKDEpLAogICAgICBfYygKICAgICAgICAiZGl2IiwKICAgICAgICB7IHJlZjogInZDb2xsYXBzZSIsIHN0YXRpY0NsYXNzOiAidi1jb2xsYXBzZSB2LW5hdmJhci1jb2xsYXBzZSIgfSwKICAgICAgICBbCiAgICAgICAgICBfYygidWwiLCB7IHN0YXRpY0NsYXNzOiAidi1uYXZiYXItbmF2IiB9LCBbCiAgICAgICAgICAgIF9jKCJsaSIsIHsgc3RhdGljQ2xhc3M6ICJ2LW5hdi1pdGVtIiwgYXR0cnM6IHsgaWQ6ICJob21lIiB9IH0sIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInYtbmF2LW1lbnUiIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ2LW1lbnUtdHh0IiwKICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHRvOiB7IG5hbWU6ICJIb21lIiB9LCBleGFjdDogIiIgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgW192bS5fdigiSG9tZSIpXQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJsaSIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ2LW5hdi1pdGVtIiwKICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAidXMiIH0sCiAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICBtb3VzZW92ZXI6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uZHJvcERvd25NZW51T24oInVzIikKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgbW91c2VvdXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uZHJvcERvd25NZW51T2ZmKCJ1cyIpCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAicm91dGVyLWxpbmsiLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ2LW1lbnUtdHh0IiwKICAgICAgICAgICAgICAgICAgICBhdHRyczogeyB0bzogeyBuYW1lOiAiTm9zb3Ryb3MiIH0gfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl92KCJOb3NvdHJvcyIpXQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIF9jKCJ1bCIsIHsgcmVmOiAidXMiLCBzdGF0aWNDbGFzczogInYtZHJvcGRvd24tbWVudSIgfSwgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAibGkiLAogICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJ2LWRyb3Bkb3duLWl0ZW0iIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdG86IHsgbmFtZTogIk5vc290cm9zIiB9IH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiIEhpc3RvcmlhICIpXQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAibGkiLAogICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJ2LWRyb3Bkb3duLWl0ZW0iIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdG86IHsgbmFtZTogIk5vc290cm9zIiB9IH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiIEp1bnRhcyBEaXJlY3RpdmFzICIpXQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAibGkiLAogICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJ2LWRyb3Bkb3duLWl0ZW0iIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdG86IHsgbmFtZTogIk5vc290cm9zIiB9IH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiIFJlZ2xhbWVudG9zICIpXQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAibGkiLAogICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJ2LWRyb3Bkb3duLWl0ZW0iIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdG86IHsgbmFtZTogIk5vc290cm9zIiB9IH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiIE5vcm1hdGl2YXMgIildCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJsaSIsCiAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInYtZHJvcGRvd24taXRlbSIgfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyB0bzogeyBuYW1lOiAiTm9zb3Ryb3MiIH0gfSB9LAogICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIgSW5zdGFsYWNpb25lcyAiKV0KICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBfYygiaSIsIHsKICAgICAgICAgICAgICAgICAgcmVmOiAidXNJY29uIiwKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJmYSBmYS1jYXJldC1kb3duIiwKICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnRvZ2dsZURyb3AoInVzIikKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAxCiAgICAgICAgICAgICksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJsaSIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ2LW5hdi1pdGVtIiwKICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAic2VydiIgfSwKICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgIG1vdXNlb3ZlcjogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5kcm9wRG93bk1lbnVPbigic2VydiIpCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIG1vdXNlb3V0OiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmRyb3BEb3duTWVudU9mZigic2VydiIpCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAicm91dGVyLWxpbmsiLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ2LW1lbnUtdHh0IiwKICAgICAgICAgICAgICAgICAgICBhdHRyczogeyB0bzogeyBuYW1lOiAiU2VydmljaW9zIiB9IH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgW192bS5fdigiU2VydmljaW9zIildCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgX2MoInVsIiwgeyByZWY6ICJzZXJ2Iiwgc3RhdGljQ2xhc3M6ICJ2LWRyb3Bkb3duLW1lbnUiIH0sIFsKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgImxpIiwKICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAidi1kcm9wZG93bi1pdGVtIiB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAicm91dGVyLWxpbmsiLAogICAgICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IHRvOiB7IG5hbWU6ICJTZXJ2aWNpb3MiIH0gfSB9LAogICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIgU2Fsw7NuIGRlIEJlbGxlemEgIildCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJsaSIsCiAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInYtZHJvcGRvd24taXRlbSIgfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyB0bzogeyBuYW1lOiAiU2VydmljaW9zIiB9IH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiIENvbnNlY2lvbmFyaW8gIildCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJsaSIsCiAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInYtZHJvcGRvd24taXRlbSIgfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyB0bzogeyBuYW1lOiAiU2VydmljaW9zIiB9IH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiIEFscXVpbGVyIGRlIFNhbG9uZXMgIildCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJsaSIsCiAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInYtZHJvcGRvd24taXRlbSIgfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyB0bzogeyBuYW1lOiAiU2VydmljaW9zIiB9IH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiIEVuZmVybWVyw61hICIpXQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAibGkiLAogICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJ2LWRyb3Bkb3duLWl0ZW0iIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdG86IHsgbmFtZTogIlNlcnZpY2lvcyIgfSB9IH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIiBTYXVuYSAiKV0KICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgImxpIiwKICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAidi1kcm9wZG93bi1pdGVtIiB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAicm91dGVyLWxpbmsiLAogICAgICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IHRvOiB7IG5hbWU6ICJTZXJ2aWNpb3MiIH0gfSB9LAogICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIgR1lNICIpXQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAibGkiLAogICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJ2LWRyb3Bkb3duLWl0ZW0iIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdG86IHsgbmFtZTogIlNlcnZpY2lvcyIgfSB9IH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIiBUaWVuZGEgZGUgQ29udmVuaWVuY2lhcyAiKV0KICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgImxpIiwKICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAidi1kcm9wZG93bi1pdGVtIiB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAicm91dGVyLWxpbmsiLAogICAgICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IHRvOiB7IG5hbWU6ICJTZXJ2aWNpb3MiIH0gfSB9LAogICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIgVGllbmRhIERlcG9ydGl2YSAiKV0KICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBfYygiaSIsIHsKICAgICAgICAgICAgICAgICAgcmVmOiAic2Vydkljb24iLAogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImZhIGZhLWNhcmV0LWRvd24iLAogICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0udG9nZ2xlRHJvcCgic2VydiIpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApLAogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAibGkiLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAidi1uYXYtaXRlbSIsCiAgICAgICAgICAgICAgICBhdHRyczogeyBpZDogImNvbSIgfSwKICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgIG1vdXNlb3ZlcjogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5kcm9wRG93bk1lbnVPbigiY29tIikKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgbW91c2VvdXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uZHJvcERvd25NZW51T2ZmKCJjb20iKQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAidi1tZW51LXR4dCIsCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdG86IHsgbmFtZTogIlNlcnZpY2lvcyIgfSB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIkNvbWl0w6lzIildCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgX2MoInVsIiwgeyByZWY6ICJjb20iLCBzdGF0aWNDbGFzczogInYtZHJvcGRvd24tbWVudSIgfSwgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAibGkiLAogICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJ2LWRyb3Bkb3duLWl0ZW0iIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdG86IHsgbmFtZTogIkNvbWl0ZXMiIH0gfSB9LAogICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIgQ29taXTDqXMgIildCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJsaSIsCiAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInYtZHJvcGRvd24taXRlbSIgfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyB0bzogeyBuYW1lOiAiQ29taXRlcyIgfSB9IH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIiBJbnN0cnVjdG9yZXMgIildCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJsaSIsCiAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInYtZHJvcGRvd24taXRlbSIgfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyB0bzogeyBuYW1lOiAiQ29taXRlcyIgfSB9IH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIiBSZWdsYW1lbnRvcyAiKV0KICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgImxpIiwKICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAidi1kcm9wZG93bi1pdGVtIiB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAicm91dGVyLWxpbmsiLAogICAgICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IHRvOiB7IG5hbWU6ICJDb21pdGVzIiB9IH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiIE5vcm1hdGl2YXMgeSBDb3N0b3MgIildCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJsaSIsCiAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInYtZHJvcGRvd24taXRlbSIgfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyB0bzogeyBuYW1lOiAiQ29taXRlcyIgfSB9IH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIiBHZWxlcsOtYSAiKV0KICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBfYygiaSIsIHsKICAgICAgICAgICAgICAgICAgcmVmOiAiY29tSWNvbiIsCiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZmEgZmEtY2FyZXQtZG93biIsCiAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgYmx1cjogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnRvZ2dsZUhpZGUoImNvbSIpCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnRvZ2dsZURyb3AoImNvbSIpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApLAogICAgICAgICAgICBfYygibGkiLCB7IHN0YXRpY0NsYXNzOiAidi1uYXYtaXRlbSIsIGF0dHJzOiB7IGlkOiAiY29udCIgfSB9LCBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJ2LW5hdi1tZW51IiB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAicm91dGVyLWxpbmsiLAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAidi1tZW51LXR4dCIsCiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyB0bzogeyBuYW1lOiAiQ29udGFjdG8iIH0gfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgW192bS5fdigiQ29udGFjdG8iKV0KICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0pCiAgICAgICAgICBdKQogICAgICAgIF0KICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgewogICAgICAgICAgcmVmOiAidG9nZ2xlTWVudSIsCiAgICAgICAgICBzdGF0aWNDbGFzczogInRvZ2dsZS1tZW51IiwKICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICByZXR1cm4gX3ZtLnRvZ2dsZU1lbnUoKQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBbX2MoImkiLCB7IHJlZjogInRvZ2dsZU1lbnVJY29uIiwgc3RhdGljQ2xhc3M6ICJmYSBmYS1iYXJzIiB9KV0KICAgICAgKQogICAgXSkKICBdKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInYtc29jaWFsLWhlYWRlciIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInYtc29jaWFsLWxlZnRib3giIH0sIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIml0ZW0iIH0sIFsKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaWNvbiBmbGF0aWNvbi10ZWxlcGhvbmUiIH0pLAogICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICJ0ZWw6ICs1ODIxMjk4NTEwMzgiIH0gfSwgWwogICAgICAgICAgICBfdm0uX3YoIiArNTguMjEyLjk4NS4xMDM4ICIpCiAgICAgICAgICBdKQogICAgICAgIF0pLAogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaXRlbSIgfSwgWwogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJpY29uIGZsYXRpY29uLWVtYWlsIiB9KSwKICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAibWFpbHRvOiBpbmZvQGNsdWJzYW50YXBhdWxhLm5ldCIgfSB9LCBbCiAgICAgICAgICAgIF92bS5fdigiIGluZm9AY2x1YnNhbnRhcGF1bGEubmV0IikKICAgICAgICAgIF0pCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidi1zb2NpYWwtcmlnaHRib3giIH0sIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInYtc29jaWFsLXJpZ2h0LWNvbnRhaW5lciIgfSwgWwogICAgICAgICAgX2MoInAiLCBbX3ZtLl92KCJTw61ndWVub3MgZW4gIildKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiAiZmxleCIsCiAgICAgICAgICAgICAgICAiZmxleC1kaXJlY3Rpb24iOiAicm93IiwKICAgICAgICAgICAgICAgICJqdXN0aWZ5LWNvbnRlbnQiOiAiZmxleC1zdGFydCIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIml0ZW0iIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJhIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImljb24gZmEgZmEtZmFjZWJvb2siLAogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIHRpdGxlOiAiRmFjZWJvb2siLAogICAgICAgICAgICAgICAgICAgIGhyZWY6CiAgICAgICAgICAgICAgICAgICAgICAiaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL0NsdWItU2FudGEtUGF1bGEtMjk4MzkyNTMwNTg4MDM0Lz9fX3h0c19fWzBdPTY4LkFSREJ6by1SR0drQkcySFBwSnhjY1d4Z3hseUw2a205OXg3X19TQldrZ1V3OExpeGpnREk4N0J6WHJCbGZ6elB3a2V0dWpOYU1PT3RuSl9MY0k2SXNiZUJOZXhkRU5HYkMyMk5Hb185R2E1UWg0NlItTERUZXRxMFpRNzZ5WFlKTDItUms1bnFHektiZHZzVVpDdlVZVGE3OVd1dk9DQkVOQUdhOHlSUXJuM1JWRE00R0xOZFlORnpYWVc0bVl0LW5LY3ZZaWlqTVljYlo2Y3JGSTMxSWtfeEZ3aTRaT2lubFEtV0VQNU5uOXJqMzNZSUZscjNKN1NNUG9tbFBDcXRuVmVMbE1HTXdTaVM2NWVmWGxnNnZGc3N6ZEpHNVVsMm0tTDV4c1N3YjdzbmFDS1lrbmE5XzdwdUdhOTFpY29KV194Z2lnbDU1cmpScDRrTThDUkRSUkkiLAogICAgICAgICAgICAgICAgICAgIHRhcmdldDogImJsYW5rIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaXRlbSIgfSwgWwogICAgICAgICAgICAgICAgX2MoImEiLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaWNvbiBmYSBmYS10d2l0dGVyIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICB0aXRsZTogIlR3aXR0ZXIiLAogICAgICAgICAgICAgICAgICAgIGhyZWY6ICJodHRwczovL3R3aXR0ZXIuY29tL3NhbnRhcGF1bGFjbHViP2xhbmc9ZXMiLAogICAgICAgICAgICAgICAgICAgIHRhcmdldDogImJsYW5rIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaXRlbSIgfSwgWwogICAgICAgICAgICAgICAgX2MoImEiLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaWNvbiBmYWIgZmEtaW5zdGFncmFtIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICB0aXRsZTogIkluc3RhZ3JhbSIsCiAgICAgICAgICAgICAgICAgICAgaHJlZjoKICAgICAgICAgICAgICAgICAgICAgICJodHRwczovL3d3dy5pbnN0YWdyYW0uY29tL2NsdWJzYW50YXBhdWxhY2NzLz9obD1lcy1sYSIsCiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0OiAiYmxhbmsiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXQogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIF0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInYtc29jaWFsLWJyYW5kIiB9LCBbCiAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgc3RhdGljU3R5bGU6IHsgaGVpZ2h0OiAiYXV0byIsIHdpZHRoOiAiMTYwcHgiIH0sCiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgIHNyYzogcmVxdWlyZSgiQC9hc3NldHMvaW1hZ2VzL2xvZ29zL2xvZ29fMjIweDExNS5wbmciKSwKICAgICAgICAgIGFsdDogIkNTUCBMb2dvIiwKICAgICAgICAgIGxvYWRpbmc6ICJsYXp5IgogICAgICAgIH0KICAgICAgfSkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}