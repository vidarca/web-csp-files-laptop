{"remainingRequest":"C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\WebProjects\\Web-csp\\web-csp\\src\\components\\Footer.vue?vue&type=template&id=40ab164b&","dependencies":[{"path":"C:\\WebProjects\\Web-csp\\web-csp\\src\\components\\Footer.vue","mtime":1597847726855},{"path":"C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}