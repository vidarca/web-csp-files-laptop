{"remainingRequest":"C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\WebProjects\\Web-csp\\web-csp\\src\\components\\AdminPages\\AdminEditJunta.vue?vue&type=template&id=834dae7a&scoped=true&","dependencies":[{"path":"C:\\WebProjects\\Web-csp\\web-csp\\src\\components\\AdminPages\\AdminEditJunta.vue","mtime":1601246466991},{"path":"C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1598308836458},{"path":"C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1598308881020},{"path":"C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1598308836458},{"path":"C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\vue-loader\\lib\\index.js","mtime":1598308880982}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}