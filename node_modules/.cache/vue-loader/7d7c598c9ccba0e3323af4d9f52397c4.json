{"remainingRequest":"C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\WebProjects\\Web-csp\\web-csp\\src\\components\\AdminPages\\AdminServices.vue?vue&type=template&id=5722d5de&scoped=true&","dependencies":[{"path":"C:\\WebProjects\\Web-csp\\web-csp\\src\\components\\AdminPages\\AdminServices.vue","mtime":1601329171834},{"path":"C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1598308836458},{"path":"C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1598308881020},{"path":"C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1598308836458},{"path":"C:\\WebProjects\\Web-csp\\web-csp\\node_modules\\vue-loader\\lib\\index.js","mtime":1598308880982}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}